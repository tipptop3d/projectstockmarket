from datetime import datetime

class NotEnoughMoney(Exception): ...
class NotInInventory(Exception): ...
class OutOfStock(Exception): ...
class ProductNotFound(Exception): ...

class Record:
    date: datetime
    value: int

class Product:
    name: str

    def get_id(self) -> int: ...
    def get_records(self, from_: datetime, to: datetime) -> list[Record]: ...

class ProductEntry:
    product: Product
    amount: int

class User:
    def get_id(self) -> int: ...
    def get_name(self) -> str: ...
    def buy_product(self, product: Product, amount: int) -> None: ...
    def sell_product(self, product: Product, amount: int) -> None: ...
    def get_balance(self) -> int: ...
    def get_inventory(self) -> list[ProductEntry]: ...

def get_product(product_id: int) -> Product: ...
def get_user(user_id: int) -> User: ...

class MarketPlace:
    def __init__(self, limit_record_entries: int) -> None: ...
    def get_inventory(self) -> list[ProductEntry]: ...
    def get_all_products(self) -> list[Product]: ...
